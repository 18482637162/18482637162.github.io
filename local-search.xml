<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>寒江孤影，江湖故人，阁下安好！</title>
    <link href="/2022/07/04/index/"/>
    <url>/2022/07/04/index/</url>
    
    <content type="html"><![CDATA[<h1 id="欢迎来到子顾的流岚坞"><a href="#欢迎来到子顾的流岚坞" class="headerlink" title="欢迎来到子顾的流岚坞"></a>欢迎来到子顾的流岚坞</h1><p>本站使用<em>hexo</em>博客框架+github仓库快速搭建，下面是整个博客的搭建过程</p><p>下面介绍本人搭建博客的大致过程（环境为win10）（目前正在整理）</p><h2 id="1、环境准备"><a href="#1、环境准备" class="headerlink" title="1、环境准备"></a>1、环境准备</h2><ul><li><p>nodeJS环境和git环境</p><p>nodeJS和git直接百度搜索下载，一键傻瓜式安装即可</p></li></ul><p>安装好nodeJS之后可以在cmd命令行使用 <em>node -v</em> 查看node版本，如果有显示版本号即表示安装成功</p><p>git则使用命令 git –version 进行查看</p><ul><li>hexo框架安装</li></ul><p>nodeJS安装好之后，已经附带安装好了npm(node package manager),然后使用下列命令安装hexo框架</p><ul><li><pre><code class="hljs">npm i hexo-cli -g<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>  <br><br>## <span class="hljs-number">2</span>、初始化博客<br><br></code></pre></td></tr></table></figure>hexo init [blog-name]<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><br>其中中括号里面的内容为你自己的博客的名字<br><br>命令执行后会在当前的目录下生成一个<span class="hljs-selector-attr">[blog-name]</span>的文件夹，进入文件夹并执行命令<br><br></code></pre></td></tr></table></figure>cd [blog-name] #进入文件夹npm i安装框架项目所需的依赖<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><br>安装过程出现缓慢的情况可以自行更换安装源，可以使用命令行命令更换，也可以使用更改配置文件的方式<br><br><span class="hljs-bullet">- </span>更换安装源 可以使用临时更换<br><br></code></pre></td></tr></table></figure>npm i --registry https://registry.npm.taobao.org</code></pre></li><li><p>可以对配置进行永久修改</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arduino">  npm config set registery https:<span class="hljs-comment">//registry.npm.taobao.org</span><br><br>- 也可以暴力对配置文件进行修改，在__C:\Users\[userName]\.npmrc__文件中添加一行（如果已经存在registery则修改‘=’后面的值即可）<br><br></code></pre></td></tr></table></figure><p>registery&#x3D;<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org/</a></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><br><span class="hljs-bullet">- </span>安装之后，目录中会生成一个<span class="hljs-emphasis">__node_modules__</span>文件夹，这是博客项目的依赖<br><br><span class="hljs-bullet">- </span>另外还有其他一些文件夹以及文件<br><br></code></pre></td></tr></table></figure><p>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br>_config.yml: 博客的配置文件</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><br><span class="hljs-bullet">- </span>然后再在命令行依次执行以下命令：<br><br></code></pre></td></tr></table></figure><p>hexo g<br>hexo s</p><p>其中 </p><ul><li><p>g：generate</p></li><li><p>s：server</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><br>​然后就在本地部署了一个博客了，打开<span class="hljs-strong">__localhost:4000__</span>就可以看见博客的首页<br><br><span class="hljs-section">## 3、创建gitHub账号，绑定邮箱，生成并添加ssh密钥</span><br><br><span class="hljs-bullet">-</span> 打开gitbash命令行界面（安装git之后右键菜单可打开，或者在开始菜单栏打开），输入以下命令<br><br></code></pre></td></tr></table></figure><p>ssh-keygen -t rsa -C “绑定的邮箱”</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><br><span class="hljs-literal">-</span> 打开目录——__C:\Users\用户名\.ssh__<br><br><span class="hljs-literal">-</span> 打开目录下文件“id_rsa.pub”复制所有内容（如果未发现该文件则先修改文件查看选项，勾选其中__隐藏的项目__）<br><span class="hljs-literal">-</span> 登录到github<br><span class="hljs-literal">-</span> 点击头像<br><span class="hljs-literal">-</span> 打开settings栏目<br><span class="hljs-literal">-</span> 在左边菜单栏内找到__SSH and GPG keys__<br><span class="hljs-literal">-</span> 右边栏目的右上角出现按钮“new ssh keys”<br><span class="hljs-literal">-</span> key的名字随便，将复制的内容粘贴到下面的key栏<br><br><span class="hljs-comment">## 4、创建github仓库</span><br><br>1. 在github找到主页右上角“+”,点击出现菜单，然后选择new Repository：<br><br>2. Repository name 中填入以下格式：<br><br></code></pre></td></tr></table></figure><p> 你的用户名+’.hithub.io’</p></li></ul><p> 如：你的用户名为 ’zhangsan‘ &#x3D;&#x3D;&gt; 仓库名则为：’zhangsan.github.io’<br> <figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>   ==一定不要自己随便命名，不然部署博客会出现问题==<br><br>其它选项选填<br><br>## <span class="hljs-number">5</span>、部署 Hexo 到 gitHub<br><br><br><br>- 在创建的博客文件夹打开命令行输入以下命令安装 hexo-deployer-git：<br><br></code></pre></td></tr></table></figure><br>npm install hexo-deployer-git –save</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><br><span class="hljs-bullet">- </span>然后修改博客配置文件_config.yml<br><br></code></pre></td></tr></table></figure><p>deploy:<br>  type: git<br>  repository: 去github仓库复制你的仓库地址（github仓库找到code——》clone界面有三个选项，选择SSH复制地址到此处<br>                  或者自己拼写&#x3D;》‘<a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#98;&#46;&#99;&#x6f;&#109;">&#103;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#98;&#46;&#99;&#x6f;&#109;</a>:用户名&#x2F;用户名.github.io.git’<br>  branch: master &#x3D;》 你的仓库主分支是什么分支就写什么</p><p>&#96;&#96;&#96;</p><p>修改完成后可以开始部署了：</p><p>建议先按顺序执行</p><ul><li><p><code>hexo clean</code></p></li><li><p><code>hexo g</code> </p></li><li><p><code>hexo d</code></p><p>这样就将网站上传部署到了 GitHub Pages。</p></li></ul></li></ul><h2 id="6、域名绑定和解析"><a href="#6、域名绑定和解析" class="headerlink" title="6、域名绑定和解析"></a>6、域名绑定和解析</h2><ul><li><p>当博客部署到了github之后，你就有了一个自己的博客的访问地址（用户名.github.io），但是这样对于一些有强迫症的同学来说还不太美观，于是我们可以自己申请一个域名让后绑定上去（当然你也可以不绑定）</p></li><li><p>注册之后，在控制台添加域名解析</p><ul><li>在解析页面添加CNAME解析记录，将域名解析指向自己的github地址</li></ul></li><li><p>将github的地址与域名绑定，具体操作如下</p><ul><li>打开本地博客的source目录</li><li>右键新建txt文件，并命名为“CNAME”注意去掉文件扩展名</li><li>然后重新清除缓存并生成文件发布</li></ul></li></ul><p>博客的部署就到此为止了，欢迎下次光临</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
